28d27
< 
30a30,34
> import std.string: toStringz;
> 
> @system:
> nothrow:
> 
67c71
< void hts_log(
---
> @nogc void hts_log(
72a77
> pragma(inline, true):
74a80,88
> void hts_log_error(const(char)[] ctx, string msg)
> {
>     string open_error_color = "\x1b[0;31m";
>     string close_color      = "\x1b[0m";
>     hts_log(htsLogLevel.HTS_LOG_ERROR, toStringz(ctx), "%.*s%.*s%.*s",
>             cast(int)open_error_color.length, open_error_color.ptr,
>             cast(int)msg.length, msg.ptr,
>             cast(int)close_color.length, close_color.ptr);
> }
76a91,100
> void hts_log_warning(const(char)[] ctx, string msg)
> {
>     string open_warning_color = "\x1b[0;33m";
>     string close_color        = "\x1b[0m";
>     hts_log(htsLogLevel.HTS_LOG_WARNING, toStringz(ctx), "%.*s%.*s%.*s",
>             cast(int)open_warning_color.length, open_warning_color.ptr,
>             cast(int)msg.length, msg.ptr,
>             cast(int)close_color.length, close_color.ptr);
> }
> 
78a103,112
> void hts_log_info(const(char)[] ctx, string msg)
> {
>     string open_info_color = "\x1b[0;32m";
>     string close_color     = "\x1b[0m";
>     hts_log(htsLogLevel.HTS_LOG_INFO, toStringz(ctx), "%.*s%.*s%.*s",
>             cast(int)open_info_color.length, open_info_color.ptr,
>             cast(int)msg.length, msg.ptr,
>             cast(int)close_color.length, close_color.ptr);
> }
> 
80a115,124
> void hts_log_debug(const(char)[] ctx, string msg)
> {
>     string open_debug_color = "\x1b[0;36m";
>     string close_color     = "\x1b[0m";
>     hts_log(htsLogLevel.HTS_LOG_DEBUG, toStringz(ctx), "%.*s%.*s%.*s",
>             cast(int)open_debug_color.length, open_debug_color.ptr,
>             cast(int)msg.length, msg.ptr,
>             cast(int)close_color.length, close_color.ptr);
> }
> 
82a127,136
> void hts_log_trace(const(char)[] ctx, string msg)
> {
>     string open_trace_color = "\x1b[1;36m";
>     string close_color     = "\x1b[0m";
>     hts_log(htsLogLevel.HTS_LOG_TRACE, toStringz(ctx), "%.*s%.*s%.*s",
>             cast(int)open_trace_color.length, open_trace_color.ptr,
>             cast(int)msg.length, msg.ptr,
>             cast(int)close_color.length, close_color.ptr);
> }
> 
83a138,147
> debug(dhtslib_unittest) unittest
> {
>     hts_set_log_level(htsLogLevel.HTS_LOG_TRACE);
> 
>     hts_log_trace(__FUNCTION__, "Test: trace");
>     hts_log_debug(__FUNCTION__, "Test: debug");
>     hts_log_info(__FUNCTION__,  "Test: info");
>     hts_log_warning(__FUNCTION__,"Test: warning");
>     hts_log_error(__FUNCTION__, "Test: error");
> }
